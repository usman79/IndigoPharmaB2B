

@{
    ViewData["Title"] = "Users";
}
<div class="main-content">
    <!-- Page Title Start -->
    <div class="row">
        <div class="colxl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="page-title-wrapper">
                <div class="page-title-box ad-title-box-use">
                    <h4 class="page-title">Users</h4>
                </div>
                <div class="ad-breadcrumb">
                    <ul>
                        <li>
                            <div class="ad-user-btn">
                                <input class="form-control" type="text" placeholder="Search Here..." id="text-input">
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 56.966 56.966">
                                    <path d="M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23
												s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92
												c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17
												s-17-7.626-17-17S14.61,6,23.984,6z"></path>
                                </svg>
                            </div>
                        </li>
                        <li>
                            <div class="add-group">
                                <a class="ad-btn" onclick="OpenNewModel()">New User</a>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- Table Start -->
    <div class="row">
        <!-- Styled Table Card-->
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card table-card">
                <div class="card-header pb-0">
                    <h4>Users</h4>
                </div>
                <div class="card-body">
                    <table id="dtUsers" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
                        <thead>
                            <tr>

                                <th></th>
                                <th>Name</th>
                                <th>Store</th>
                                <th>Phone</th>
                                <th>License File</th>
                                <th>License Expiry</th>
                                <th>Status</th>
                                <th>Action</th>

                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section AppModals{
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">New User</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="UserForm">
                        <div class="row">
                            <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">
                                <div class="form-group">
                                    <label class="col-form-label">First Name</label>
                                    <input required="required" id="UserFirstName" class="form-control required" type="text" placeholder="First Name">
                                </div>


                            </div>
                            <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">

                                <div class="form-group">
                                    <label class="col-form-label">Last Name</label>
                                    <input required="required" id="UserLastName" class="form-control required" type="text" placeholder="Last Name">
                                </div>
                            </div>
                            <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">
                                <div class="form-group">
                                    <label class="col-form-label">Store Name</label>
                                    <input required="required" id="UserSore" class="form-control required" type="text" placeholder="Store Name">
                                </div>


                            </div>
                            <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">

                                <div class="form-group">
                                    <label class="col-form-label">Phone</label>
                                    <input required="required" id="UserPhone" class="form-control required" type="text" placeholder="Phone">
                                </div>
                            </div>
                            <input type="hidden" id="UserId" />
                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                                <div class="form-group">
                                    <label for="additional-msg" class="col-form-label">Address</label>
                                    <textarea id="Address" class="form-control" placeholder="Address"></textarea>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="SaveItem()">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="imagePreviewModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">License</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <img id="previewImage" class="image-responsive" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="AssignModal" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AssignModalTitle">Assign a Delivery Boy</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">
                            <div class="form-group">
                                <label class="col-form-label">Delivery Boy</label>
                                <select class="form-control" id="DeliveryboyId"></select>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="UserIdHdn"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="SaveDeliveryBoy()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>
        var dtUsers = null;
        var EditObject = null;

        $(document).ready(function () {
            LoadAll();
            LoadAllSalesMan();
            $(document).on('click', 'tr td.details-control', function () {
                var tr = $(this).parents('tr');
                var row = dtUsers.row(tr);

                if (row.child.isShown()) {

                    tr.find("i.td-icon").removeClass('fas fa-minus');
                    tr.find("i.td-icon").addClass('fas fa-plus');

                    tr.find("button.td-icon").removeClass('danger-outline');
                    tr.find("button.td-icon").addClass('success-outline');
                    row.child.hide();

                }
                else {
                    tr.find("i.td-icon").removeClass('fas fa-plus');
                    tr.find("i.td-icon").addClass('fas fa-minus');

                    tr.find("button.td-icon").addClass('danger-outline');
                    tr.find("button.td-icon").removeClass('success-outline');

                    row.child(format(row.data())).show();


                }
            });
            $('#text-input').keyup(function () {
                dtUsers.search($(this).val()).draw();
            });
        });

        function format(d) {
            if (d) {
                return '<div><strong class="text-primary">Full name:</strong> ' + d.UserFirstName + ' ' + d.UserLastName + '<br><br>' +
                    '<strong class="text-primary">Store:</strong> ' + d.UserSore + '<br><br>' +
                    '<strong class="text-primary">Phone:</strong> ' + d.UserPhone + '<br><br>' +
                    '<strong class="text-primary">Delivery Boy:</strong> ' + d.AssignedUserName + '&nbsp;&nbsp;<label class="mb-0 badge badge-primary toltiped" onclick="AssignModal(' + d.UserId + ',' + d.AssignedDeliveryBoyId + ')">Change</label><br><br></div>';
            }
        }

        function LoadAll() {
            var host = window.location;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: '/UserAccount/GetAll',
                success: function (data) {
                    console.log(data);
                    BindDataTable(data);
                },
                error: function (result) {
                }
            });
        }

        function BindDataTable(data) {
            if (dtUsers != null)
                dtUsers.destroy();
            dtUsers = $('#dtUsers').DataTable({
                dom: "<'row'<'col-sm-12'tr>>" + "<'row'<'col-sm-4'i><'col-sm-8'p>>",
                data: data,
                order: false,
                autoWidth: false,
                pageLength: 9,
                rowId: "UserId",
                columns: [
                    {
                        "class": "details-control text-center",
                        "orderable": false,
                        "data": null,
                        "defaultContent": "",
                        render: function (data, type, row, meta) {
                            return '<button type="button" class="btn-outline success-outline mt-2 mr-2 icon-sm td-icon"><i class="fas fa-plus td-icon"></i></button>';
                        }

                    },
                    {
                        "searchable": true,
                        data: null,
                        class: "no-sort",
                        "orderable": false,
                        render: function (data, type, row, meta) {
                            return row.UserFirstName + " " + row.UserLastName;
                        }
                    },
                    {
                        data: "UserSore",
                        "orderable": false,
                        class: "no-sort",
                        "searchable": true
                    },

                    {
                        data: "UserPhone",
                        "orderable": false,
                        class: "no-sort",
                        "searchable": false
                    },
                    {
                        "searchable": false,
                        data: null,
                        class: "no-sort",
                        "orderable": false,
                        render: function (data, type, row, meta) {
                            if (row.LicenseInformation != null) {
                                return '<label class="mb-0 badge badge-primary toltiped" onclick="ViewImageFile(this)">View</label>';
                            }
                            return "";
                        }
                    },
                    {
                        "searchable": false,
                        data: null,
                        class: "no-sort",
                        "orderable": false,
                        render: function (data, type, row, meta) {
                            if (row.LicenseInformation != null) {
                                var dateOriginal = new Date(row.LicenseInformation.LicenseExpiry);
                                var formattedDate = moment(dateOriginal).format('dddd, DD MMM YYYY');
                                return formattedDate;
                            }
                            return "";
                        }
                    },
                    {
                        "searchable": false,
                        data: null,
                        class: "no-sort complete-restriction",
                        "orderable": false,
                        render: function (data, type, row, meta) {
                            var label = '';
                            if (row.IsVerified == false || row.IsVerified == null) {
                                label = '<label class="mb-0 badge badge-danger toltiped" data-bs-toggle="dropdown">Unverified</label>';
                            }
                            else if (row.IsVerified == true) {
                                label = '<label class="mb-0 badge badge-success toltiped" data-bs-toggle="dropdown">Verified</label>';
                            }
                            return '<div class="dropdown"> ' + label + ' <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"> <li><a class="dropdown-item" href="#" onclick="UpdateUserStatus(this,true)"><label class="mb-0 badge badge-success w-100">Verify</label></a></li> <li><a onclick="UpdateUserStatus(this,false)" class="dropdown-item" href="#"><label class="mb-0 badge badge-danger w-100">Unverify</label></a></li> </ul> </div>';
                        }
                    },
                    {
                        data: null,
                        "searchable": false,
                        class: "no-sort text-center",
                        "orderable": false,
                        render: function (data, type, row, meta) {
                            var html = '<div class="relative"><a class="action-btn" href="javascript:void(0);"> <svg class="default-size " viewBox="0 0 341.333 341.333 "> <g> <g> <g> <path d="M170.667,85.333c23.573,0,42.667-19.093,42.667-42.667C213.333,19.093,194.24,0,170.667,0S128,19.093,128,42.667 C128,66.24,147.093,85.333,170.667,85.333z "></path> <path d="M170.667,128C147.093,128,128,147.093,128,170.667s19.093,42.667,42.667,42.667s42.667-19.093,42.667-42.667 S194.24,128,170.667,128z "></path> <path d="M170.667,256C147.093,256,128,275.093,128,298.667c0,23.573,19.093,42.667,42.667,42.667s42.667-19.093,42.667-42.667 C213.333,275.093,194.24,256,170.667,256z "></path> </g> </g> </g> </svg> </a> <div class="action-option"> <ul> <li> <a onclick="EditItem(this)" href="javascript:void(0);"><i class="far fa-edit mr-2"></i>Edit</a> </li> <li> <a href="javascript:void(0);" onclick="DeleteItem(' + row.UserId + ')"><i class="far fa-trash-alt mr-2"></i>Delete</a> </li> </ul> </div></div>';
                            return html;
                        }
                    }
                ]
            });
        }

        function UpdateUserStatus(element, status) {
            var dataUser = dtUsers.row($(element).parents('tr')).data();
            dataUser.IsVerified = status;

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: '/UserAccount/UpdateStatus?UserId=' + dataUser.UserId + '&&Status=' + dataUser.IsVerified,
                success: function (data) {
                    if (data == true) {

                        dtUsers.row('#' + dataUser.UserId)
                            .data(dataUser)
                            .draw();
                    }
                },
                error: function (result) {
                }
            });
        }

        function OpenNewModel() {
            $('#UserId').val('');
            $('#UserFirstName').val('');
            $('#UserLastName').val('');
            $('#UserEmailAddress').val('');
            $('#UserPassword').val('');
            $('#Address').val('');
            $('#UserPhone').val('');

            $("#exampleModalLong").modal("show");
        }

        function EditItem(element) {
            var data = dtUsers.row($(element).parents('tr')).data();
            $('#UserId').val(data.UserId);
            $('#UserFirstName').val(data.UserFirstName);
            $('#UserLastName').val(data.UserLastName);
            $('#UserEmailAddress').val(data.UserEmailAddress);
            $('#UserPassword').val(data.UserPassword);
            $('#Address').val(data.Address);
            $('#UserPhone').val(data.UserPhone);

            $("#exampleModalLong").modal("show");
        }

        function DeleteItem(id) {
            var host = window.location;
            $.ajax({
                url: host.protocol + "//" + host.host + '/UserAccount/Delete?id=' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                success: function (json) {
                    LoadAll();
                },
                error: function (result) {

                }
            });
        }

        function SaveItem() {
            if (CheckRequired($('#userForm'))) {
                var UserInfo = {
                    UserId: $('#UserId').val(),
                    UserFirstName: $('#UserFirstName').val(),
                    UserLastName: $('#UserLastName').val(),
                    UserEmailAddress: $('#UserEmailAddress').val(),
                    UserPassword: $('#UserPassword').val(),
                    UserPhone: $('#UserPhone').val(),
                    Address: $('#Address').val()
                };
                var formData = new FormData();
                formData.append('UserId', UserInfo.UserId);
                formData.append('UserFirstName', UserInfo.UserFirstName);
                formData.append('UserLastName', UserInfo.UserLastName);
                formData.append('UserEmailAddress', UserInfo.UserEmailAddress);
                formData.append('UserPassword', UserInfo.UserPassword);
                formData.append('UserPhone', UserInfo.UserPhone);
                formData.append('Address', UserInfo.Address);


                $.ajax({
                    url: '/UserAccount/Save',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (result) {
                        $("#exampleModalLong").modal("hide");
                        LoadAll();
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });
            } else {
                alert('Please fill all required fields!');
            }
        }

        function ViewImageFile(element) {
            var data = dtUsers.row($(element).parents('tr')).data();
            var imgUrl = '/license/' + data.LicenseInformation.LicenseId + "/" + data.LicenseInformation.LicenseFile
            $('#previewImage').attr('src', imgUrl);
            $('#imagePreviewModal').modal('show');
        }

        function CheckRequired($element) {
            var $form = $element;

            if ($form.find('.required').filter(function () { return this.value === '' }).length > 0) {
                return false;
            }
            return true;
        }

        function LoadAllSalesMan() {
            var host = window.location;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: '/DeliveryBoy/GetAllDeliveryBoy',
                success: function (data) {
                    data.forEach(function (entry) {
                        $('#DeliveryboyId').append('<option value="' + entry.UserId + '">' + entry.UserFirstName + " " + entry.UserLastName + '</option>')
                    });
                    $('#DeliveryboyId').select2({
                        placeholder: "Select a Delivery Boy",
                        dropdownParent: $("#AssignModal .modal-content")
                    });
                    $("#DeliveryboyId").val('').trigger('change');
                },
                error: function (result) {
                    $('#SalesmanId').select2({
                        placeholder: "Select a Delivery Boy",
                        dropdownParent: $("#AssignModal .modal-content")
                    });
                }
            });
        }

        function AssignModal(UserId,DeliveryBoyId) {
            $('#DeliveryboyId').val(DeliveryBoyId).trigger('change');
            $('#UserIdHdn').val(UserId);
            $("#AssignModal").modal("show");
        }

        function SaveDeliveryBoy() {
            var userId = $('#UserIdHdn').val();
            var deliveryBoyId = $('#DeliveryboyId').val();
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: '/UserAccount/UpdateDeliveryBoy?UserId=' + userId + '&&DeliveryBoyId=' + deliveryBoyId,
                success: function (data) {
                    LoadAll();
                    $("#AssignModal").modal("hide");
                },
                error: function (result) {
                }
            });
        }

    </script>
}